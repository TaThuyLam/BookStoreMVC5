@model WebsiteBanSach.Models.KhachHang

@{
    ViewBag.Title = "ChinhSua";
    Layout = "~/Views/Layout/NguoiDungLayout.cshtml";
}

@*<h2>ChinhSua</h2>*@
<style>
    .item1 {
        grid-area: header;
        margin-left: 60px;
        margin-right: 60px;
    }

    .item2 {
        grid-area: menu;
        width: 280px;
        height: 300px;
        /*margin: 52px 100px 0px 0px;*/
        /*border: 1px solid #80808024;
        border-radius: 10px;
        box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.0), 0 5px 12px 0 rgba(0, 0, 0, 0.1);*/
        margin-right: 100px;
    }

    .item3 {
        grid-area: main;
    }

    .grid-container {
        display: grid;
        grid-template-areas: 'header header header header header header' 'menu menu menu main main main';
        gap: 10px;
        /*margin-top: 20px;*/
        /*background-color: #e7e7e790;*/
        padding: 10px;
        justify-content: end;
        width: 92%;
    }

        .grid-container > div {
            background-color: rgba(255, 255, 255, 0.8);
            text-align: center;
            padding: 20px 0;
            font-size: 18px;
        }

    .item1 {
        grid-area: header;
        /*margin-left: 60px;
        margin-right: 60px;*/
        display: flex;
        margin-left: 0px;
    }

    #item-main {
        padding-top: 0px;
        width: 900px;
        /*border: 1px solid #3a446836;*/
    }

    .control-label.col-md-2 {
        width: 143px;
        text-align: left;
    }

    #main {
        background-color: white;
    }

    #gioiTinh {
        display: flex;
        justify-content: center;
        width: 417px;
        margin-top: 20px;
    }

    #gt-item {
        width: 220px;
        display: flex;
        justify-content: space-evenly;
    }

    #lbl-gt {
        width: fit-content
    }

    .form-group {
        margin-bottom: 20px;
        display: flex;
        justify-content: center;
        align-items: center;
    }

    #nam {
        margin-left: 65px
    }

    .col-md-10 {
        width: 70%;
    }

    .tbl-tk {
        border: 1px solid #80808024;
        border-radius: 10px;
        box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.0), 0 5px 12px 0 rgba(0, 0, 0, 0.1);
    }

    .form-horizontal {
        margin-top: 40px;
    }

    .btn.btn-default {
        background-color: #3a4468;
        color: white
    }

    .label-head {
        margin-bottom: 0px;
        font-weight: bold;
        font-size: 25px;
    }

    #menu-left {
        width: 255px;
        border-right: 1px solid #3a446836;
        padding: 0px;
    }

    .item-menu {
        height: 135px;
        display: flex;
        width: 90%;
        border-top: 1px solid #3a4468ad;
        text-align: left;
        padding-top: 35px;
        flex-direction: column;
        align-items: flex-start;
        justify-content: space-between;
    }

        .item-menu a {
            color: black;
            font-size: 17px;
        }

            .item-menu a:hover {
                color: #F3c93e;
            }
</style>
<div class="item1" style="padding-bottom:0px;">
    <p class="label-head" style="width: 150px; text-align: left;">
        Tài khoản
    </p>
    <p class="label-head" style="margin-left:235px;">

    </p>
</div>
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div class="grid-container">
        <div class="item2" id="menu-left">

            <div class="item-menu">
                <a href="@Url.Action("ChinhSua", "NguoiDung")">Tài khoản của tôi</a>
                <a href="@Url.Action("LichSuMuaHang", "NguoiDung")">Đơn hàng của tôi</a>
                <a href="@Url.Action("Voucher", "NguoiDung")">Ví voucher</a>
            </div>

        </div>
        <div class="item3" id="item-main">

            <div class="tbl-tk">
                <div class="form-horizontal">

                    @*<hr />*@
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    @Html.HiddenFor(model => model.MaKH)


                    <div class="form-group">
                        @Html.LabelFor(model => model.HoTen, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.HoTen, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.HoTen, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.TaiKhoan, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.TaiKhoan, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.TaiKhoan, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.MatKhau, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.MatKhau, new { htmlAttributes = new { @class = "form-control", Type = "password" } })
                            @Html.ValidationMessageFor(model => model.MatKhau, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.DiaChi, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.DiaChi, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.DiaChi, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.DienThoai, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.DienThoai, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.DienThoai, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group" id="gioiTinh">
                        @Html.LabelFor(model => model.GioiTinh, htmlAttributes: new { @class = "control-label col-md-2", @id = "lbl-gt" })
                        <div class="col-md-10" id="gt-item">
                            <p></p>
                            @Html.DropDownList("GioiTinh")
                            @Html.ValidationMessageFor(model => model.GioiTinh, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.NgaySinh, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.NgaySinh, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.NgaySinh, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value="Lưu chỉnh sửa" class="btn btn-default" />
                        </div>
                    </div>
                </div>
            </div>

        </div>

    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
@if (TempData["message"] != null)
{
    <script>

            var alert_success = document.getElementsByClassName("alert-success")[0];
        var text_success = document.getElementById("text_success");
        text_success.innerHTML = 'Cập nhật thành công.';
            alert_success.style = "display:flex";
        setTimeout(function () {
                alert_success.style = "display:none";
            }, 3000);
    </script>
}
